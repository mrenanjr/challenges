version: "3.8"

services: 
    # rabbitmq:
    #     image: rabbitmq:3-management
    #     container_name: rabbitmq
    #     ports:
    #         - "5672:5672"
    #         - "15672:15672"
    #     networks:
    #         - mynetwork
    
    sqldata:
        image: mcr.microsoft.com/mssql/server:2017-latest
        container_name: sqldata
        environment:
            MSSQL_SA_PASSWORD: "Desafio123"
            ACCEPT_EULA: "Y"
            MSSQL_PID: Express
        # networks:
        #     - mynetwork
        ports: 
            - "1433:1433"

    backend:
        image: backend:latest
        links:
            - sqldata
            # - rabbitmq
        build: 
            context: ./API/TemplateS.API
            dockerfile: "Dockerfile"
        # networks:
        #     - mynetwork
        ports:
            - "5000:80"
        environment:
            - ASPNETCORE_ENVIRONMENT=Development

    clientreact:
        image: clientreact:latest
        build:
            context: ./Client/TemplateS.Client/TemplateS.Client.React
            dockerfile: Dockerfile
        ports: 
            - "3000:3000"
        # networks:
        #     - mynetwork
    
    clientangular:
        image: clientangular:latest
        build:
            context: ./Client/TemplateS.Client/TemplateS.Client
            dockerfile: Dockerfile
        ports: 
            - "4200:4200"
        volumes:
            - ./Client/TemplateS.Client/TemplateS.Client/src:/app/src

    proxy:
        image: proxy:latest
        depends_on:
            - backend
            - clientreact
            - clientangular
        build: 
            context: ./Proxy
            dockerfile: Dockerfile
        ports: 
            - "80:80"
        volumes:
            - ./Proxy/nginx.conf:/etc/nginx/nginx.conf
       # restart: always

# networks:
#   mynetwork:
#     driver: bridge