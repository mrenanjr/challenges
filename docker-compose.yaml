version: "3.4"

services: 
    #proxy:
    #    build: 
    #        context: "./Proxy"
    #        dockerfile: "Dockerfile"
    #    ports: 
    #        - "80:80"
    #    restart: always

    #clientangular:
    #    depends_on:
    #        - api
    #    build:
    #        context: "./Client/TemplateS.Client/TemplateS.Client"
    #        dockerfile: "Dockerfile"
    #    ports: 
    #        - "4200:4200"
    #    expose:
    #        - "4200"

    clientreact:
        depends_on:
            - api
        build:
            context: "./Client/TemplateS.Client/TemplateS.Client.React"
            dockerfile: "Dockerfile"
        ports: 
            - "3000:80"
    
    sqldata:
        image: "mcr.microsoft.com/mssql/server:2017-latest-ubuntu"
        environment:
            SA_PASSWORD: "Desafio123"
            ACCEPT_EULA: "Y"
            MSSQL_PID: Express
        ports: 
            - "1433:1433"

    api:
        depends_on:
            - sqldata
            #- rabbitmq
        build: 
            context: "./API/TemplateS.API"
            dockerfile: "Dockerfile"
        ports: 
            - "5000:80"
        environment:
            DBServer: "sqldata"
            DBPort: "1433"
            DBUser: "SA"
            DBPassword: "Desafio123"
            Database: "Desafio"
        command: ["./wait-for-it.sh" , "sqldata:1433"]
        restart: always

    #rabbitmq:
    #    container_name: rabbitmq
    #    ports:
    #        - 5672:5672
    #        - 15672:15672
    #    environment:
    #        - RABBITMQ_DEFAULT_USER=guest
    #        - RABBITMQ_DEFAULT_PASS=guest
    #    image: rabbitmq:3-management